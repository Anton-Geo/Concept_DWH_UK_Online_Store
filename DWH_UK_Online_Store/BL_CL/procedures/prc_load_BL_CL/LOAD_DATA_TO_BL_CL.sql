CREATE OR REPLACE PROCEDURE "BL_CL"."LOAD_DATA_TO_BL_CL"()
LANGUAGE plpgsql
AS
$$
BEGIN

	CALL "BL_CL"."LOAD_DATA_FROM_GLOB_TO_WRK_REGIONS"();
	CALL "BL_CL"."LOAD_DATA_FROM_GLOB_TO_WRK_SUBREGIONS"();
	CALL "BL_CL"."LOAD_DATA_FROM_EU_TO_WRK_COUNTRIES"();
	CALL "BL_CL"."LOAD_DATA_FROM_GLOB_TO_WRK_COUNTRIES"();

	DROP INDEX IF EXISTS "BL_CL".btree_wrk_customers_src_id_idx;
	CALL "BL_CL"."LOAD_DATA_FROM_UE_TO_WRK_CUSTOMERS"();
	CALL "BL_CL"."LOAD_DATA_FROM_GLOB_TO_WRK_CUSTOMERS"();
	CREATE INDEX btree_wrk_customers_src_id_idx
	    ON "BL_CL"."WRK_CUSTOMERS" ("CUSTOMER_NAME");

	CALL "BL_CL"."LOAD_DATA_FROM_EU_TO_WRK_PLATFORMS"();
	CALL "BL_CL"."LOAD_DATA_FROM_GLOB_TO_WRK_PLATFORMS"();
	CALL "BL_CL"."LOAD_DATA_FROM_EU_TO_WRK_PAYMENT_TYPES"();
	CALL "BL_CL"."LOAD_DATA_FROM_GLOB_TO_WRK_PAYMENT_TYPES"();
	CALL "BL_CL"."LOAD_DATA_FROM_EU_TO_WRK_PRODUCT_CATEGORIES"();
	CALL "BL_CL"."LOAD_DATA_FROM_EU_TO_WRK_PRODUCT_SUBCATEGORIES"();
	CALL "BL_CL"."LOAD_DATA_FROM_GLOB_TO_WRK_PRODUCT_SUBCATEGORIES"();

	DROP INDEX IF EXISTS "BL_CL".btree_wrk_products_scd_src_id_idx;
	CALL "BL_CL"."LOAD_DATA_FROM_UE_TO_WRK_PRODUCTS_SCD"();
	CALL "BL_CL"."LOAD_DATA_FROM_GLOB_TO_WRK_PRODUCTS_SCD"();
	CREATE INDEX IF NOT EXISTS btree_wrk_products_scd_src_id_idx
	    ON "BL_CL"."WRK_PRODUCTS_SCD" ("PRODUCT_SRC_ID", "START_DT");

	CALL "BL_CL"."LOAD_DATA_FROM_UE_TO_WRK_SALES"();
	CALL "BL_CL"."LOAD_DATA_FROM_GLOBAL_TO_WRK_SALES"();

	ANALYZE;
END;
$$;

/*
CALL "BL_CL"."LOAD_DATA_TO_BL_CL"();
 */